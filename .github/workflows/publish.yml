name: Publish
on:
  release:
    types:
      - published
jobs:
  version:
    name: Create version number
    runs-on: ubuntu-18.04
    outputs:
      versionNumber: ${{ steps.version.outputs.content }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch all history for all tags and branches
        run: |
          git config remote.origin.url https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}
          git fetch --prune --depth=10000

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.10
        with:
          versionSpec: '5.x'

      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.10

      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt

      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt

      - name: Get version.txt
        uses: actions/download-artifact@v2
        with:
          name: gitversion

      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt

      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt
  build:
    runs-on: windows-latest
    needs: [ version ]
    env:
      # For use with https://stackoverflow.com/a/60364278/1687436
      RELEASE_VERSION: ${{needs.version.outputs.versionNumber}}
    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Show dotnet info
        run: dotnet --info

      - name: Show the version that's being built
        run: echo "Building version $RELEASE_VERSION"

      - name: Add dotnet-format problem matcher
        uses: xt0rted/dotnet-format-problem-matcher@v1

      - name: Restore dotnet tools
        uses: xt0rted/dotnet-tool-restore@v1

      - name: Run dotnet format
        run: dotnet format --verify-no-changes
      # https://github.com/xt0rted/dotnet-format/issues/174
      #      - name: Run dotnet format
      #        uses: xt0rted/dotnet-format@v1

      - name: Attempt to build project (using the publish command)
        run: dotnet publish

#      - name: Show exe version info
#        run: dotnet versioninfo Windows/bin/Debug/net5.0-windows/win10-x64/publish/titanfall2-rp.exe -j
#
#      - name: Show wine exe version info
#        run: dotnet versioninfo Wine/bin/Debug/net5.0/win10-x64/publish/titanfall2-rp-Wine.exe -j

      - name: Upload EXE as run artifact
        uses: actions/upload-artifact@v2
        with:
          name: exe
          path: Windows/bin/Debug/net5.0-windows/win10-x64/publish/titanfall2-rp.exe

      - name: Upload Wine EXE as run artifact
        uses: actions/upload-artifact@v2
        with:
          name: exe-wine
          path: Wine/bin/Debug/net5.0/win10-x64/publish/titanfall2-rp-Wine.exe

  release:
    name: Add artifact to GH Release
    runs-on: ubuntu-latest
    needs: [ version, build ]
    env:
      # For use with https://stackoverflow.com/a/60364278/1687436
      RELEASE_VERSION: ${{needs.version.outputs.versionNumber}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get EXE from artifacts
        uses: actions/download-artifact@v2
        with:
          name: exe

      - name: Get Wine EXE from artifacts
        uses: actions/download-artifact@v2
        with:
          name: exe-wine

      - name: Replace the template string in the updater xml file
        run: sed -e "s/\${VERSION}/$RELEASE_VERSION/" ./assets/auto-update-template.xml | tee updater-helper-file.xml

      - name: Replace the template string in the updater xml file (for Wine)
        run: sed -e "s/\${VERSION}/$RELEASE_VERSION/" ./assets/auto-update-wine-template.xml | tee updater-helper-file-wine.xml
        
      - name: Make a zip
        run: zip titanfall2-rp.zip titanfall2-rp.exe
        
      - name: Make a zip for wine
        run: zip titanfall2-rp-wine.zip titanfall2-rp-Wine.exe

      - name: Add all artifacts to release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: false
          files: |
            titanfall2-rp.exe
            titanfall2-rp-Wine.exe
            titanfall2-rp.zip
            titanfall2-rp-wine.zip
            updater-helper-file.xml
            updater-helper-file-wine.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}